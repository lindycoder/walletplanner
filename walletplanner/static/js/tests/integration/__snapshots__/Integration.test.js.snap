// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should be able to add and see a transaction 1`] = `
<App
  echoUrl="/echo-url"
  homeUrl="/home-url"
  server={
    FakeServer {
      "transactions": Array [
        Object {
          "amount": 100,
          "category": "",
          "date": "2019-02-02T00:00:00.000Z",
          "description": "",
        },
      ],
    }
  }
>
  <div
    className="App container"
  >
    <h1
      className="display-4"
    >
      Wallet Planner
    </h1>
    <AddTransactions
      onTransactionAdded={[Function]}
      server={
        FakeServer {
          "transactions": Array [
            Object {
              "amount": 100,
              "category": "",
              "date": "2019-02-02T00:00:00.000Z",
              "description": "",
            },
          ],
        }
      }
    >
      <div>
        Add transactions
        <TransactionLine
          transaction={
            Object {
              "amount": 100,
              "category": "",
              "date": "2019-02-02T00:00:00.000Z",
              "description": "",
            }
          }
        >
          <div
            className="form-row"
          >
            <div
              className="form-group col-sm-11"
            >
              <DatePicker
                allowSameDay={false}
                className="transaction-line-date"
                dateFormat="MM/dd/yyyy"
                dateFormatCalendar="LLLL yyyy"
                disabled={false}
                disabledKeyboardNavigation={false}
                dropdownMode="scroll"
                inlineFocusSelectedMonth={false}
                monthsShown={1}
                nextMonthButtonLabel="Next month"
                onBlur={[Function]}
                onChange={[Function]}
                onClickOutside={[Function]}
                onFocus={[Function]}
                onInputClick={[Function]}
                onInputError={[Function]}
                onKeyDown={[Function]}
                onMonthChange={[Function]}
                onSelect={[Function]}
                onYearChange={[Function]}
                preventOpenOnFocus={false}
                previousMonthButtonLabel="Previous Month"
                readOnly={false}
                renderDayContents={[Function]}
                selected={2019-02-02T00:00:00.000Z}
                shouldCloseOnSelect={true}
                showMonthYearPicker={false}
                showTimeInput={false}
                showTimeSelect={false}
                strictParsing={false}
                timeCaption="Time"
                timeInputLabel="Time"
                timeIntervals={30}
                withPortal={false}
              >
                <PopperComponent
                  hidePopper={true}
                  popperComponent={null}
                  popperModifiers={
                    Object {
                      "preventOverflow": Object {
                        "boundariesElement": "viewport",
                        "enabled": true,
                        "escapeWithReference": true,
                      },
                    }
                  }
                  popperPlacement="bottom-start"
                  popperProps={Object {}}
                  targetComponent={
                    <div
                      className="react-datepicker__input-container"
                    >
                      <input
                        className="transaction-line-date"
                        disabled={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        readOnly={false}
                        type="text"
                        value="02/02/2019"
                      />
                    </div>
                  }
                >
                  <Manager>
                    <Reference>
                      <InnerReference
                        setReferenceNode={[Function]}
                      >
                        <div
                          className="react-datepicker-wrapper"
                        >
                          <div
                            className="react-datepicker__input-container"
                          >
                            <input
                              className="transaction-line-date"
                              disabled={false}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              readOnly={false}
                              type="text"
                              value="02/02/2019"
                            />
                          </div>
                        </div>
                      </InnerReference>
                    </Reference>
                  </Manager>
                </PopperComponent>
              </DatePicker>
              <CurrencyInput
                allowNegative={false}
                autoFocus={false}
                className="transaction-line-amount"
                decimalSeparator="."
                inputType="text"
                onChange={[Function]}
                onChangeEvent={[Function]}
                precision="2"
                prefix=""
                selectAllOnFocus={false}
                suffix=""
                thousandSeparator=","
                value={1}
              >
                <input
                  className="transaction-line-amount"
                  onChange={[Function]}
                  onFocus={[Function]}
                  onMouseUp={[Function]}
                  type="text"
                  value="1.00"
                />
              </CurrencyInput>
            </div>
          </div>
        </TransactionLine>
        <div
          className="col-sm-1"
        >
          <button
            className="btn btn-primary"
            onClick={[Function]}
          >
            Submit
          </button>
        </div>
      </div>
    </AddTransactions>
    <TransactionsView
      currentDate={"2019-02-02T00:00:00.000Z"}
      periodStart={-3}
      periodicity={
        StaticMonthly {
          "days": Array [
            1,
            15,
          ],
        }
      }
      transactions={
        Array [
          Object {
            "amount": 100,
            "category": "",
            "date": "2019-02-02T00:00:00.000Z",
            "description": "",
          },
        ]
      }
    >
      <div
        className="container"
      >
        <div
          className="row"
        >
          <TransactionsPeriodView
            className="transaction-view-period col-sm"
            key="0"
            period={
              Period {
                "openingBalance": 0,
                "range": t {
                  "end": "2019-01-01T00:00:00.000Z",
                  "start": "2018-12-15T00:00:00.000Z",
                },
                "transactions": Array [],
              }
            }
          >
            <div
              className="transaction-view-period col-sm"
            >
              <div
                className="transaction-view-date"
              >
                2018-12-15
              </div>
              <div
                className="transactions"
              />
              <div
                className="transactions-total"
              >
                0.00$
              </div>
            </div>
          </TransactionsPeriodView>
          <TransactionsPeriodView
            className="transaction-view-period col-sm"
            key="1"
            period={
              Period {
                "openingBalance": 0,
                "range": t {
                  "end": "2019-01-15T00:00:00.000Z",
                  "start": "2019-01-01T00:00:00.000Z",
                },
                "transactions": Array [],
              }
            }
          >
            <div
              className="transaction-view-period col-sm"
            >
              <div
                className="transaction-view-date"
              >
                2019-01-01
              </div>
              <div
                className="transactions"
              />
              <div
                className="transactions-total"
              >
                0.00$
              </div>
            </div>
          </TransactionsPeriodView>
          <TransactionsPeriodView
            className="transaction-view-period col-sm"
            key="2"
            period={
              Period {
                "openingBalance": 0,
                "range": t {
                  "end": "2019-02-01T00:00:00.000Z",
                  "start": "2019-01-15T00:00:00.000Z",
                },
                "transactions": Array [],
              }
            }
          >
            <div
              className="transaction-view-period col-sm"
            >
              <div
                className="transaction-view-date"
              >
                2019-01-15
              </div>
              <div
                className="transactions"
              />
              <div
                className="transactions-total"
              >
                0.00$
              </div>
            </div>
          </TransactionsPeriodView>
          <TransactionsPeriodView
            className="transaction-view-period col-sm"
            key="3"
            period={
              Period {
                "openingBalance": 0,
                "range": t {
                  "end": "2019-02-15T00:00:00.000Z",
                  "start": "2019-02-01T00:00:00.000Z",
                },
                "transactions": Array [
                  Object {
                    "amount": 100,
                    "category": "",
                    "date": "2019-02-02T00:00:00.000Z",
                    "description": "",
                  },
                ],
              }
            }
          >
            <div
              className="transaction-view-period col-sm"
            >
              <div
                className="transaction-view-date"
              >
                2019-02-01
              </div>
              <div
                className="transactions"
              >
                <TransactionBadge
                  key="0"
                  transaction={
                    Object {
                      "amount": 100,
                      "category": "",
                      "date": "2019-02-02T00:00:00.000Z",
                      "description": "",
                    }
                  }
                >
                  <span
                    className="badge badge-light transaction-badge-amount"
                  >
                    1.00$
                  </span>
                </TransactionBadge>
              </div>
              <div
                className="transactions-total"
              >
                1.00$
              </div>
            </div>
          </TransactionsPeriodView>
          <TransactionsPeriodView
            className="transaction-view-period col-sm"
            key="4"
            period={
              Period {
                "openingBalance": 0,
                "range": t {
                  "end": "2019-03-01T00:00:00.000Z",
                  "start": "2019-02-15T00:00:00.000Z",
                },
                "transactions": Array [],
              }
            }
          >
            <div
              className="transaction-view-period col-sm"
            >
              <div
                className="transaction-view-date"
              >
                2019-02-15
              </div>
              <div
                className="transactions"
              />
              <div
                className="transactions-total"
              >
                0.00$
              </div>
            </div>
          </TransactionsPeriodView>
          <TransactionsPeriodView
            className="transaction-view-period col-sm"
            key="5"
            period={
              Period {
                "openingBalance": 0,
                "range": t {
                  "end": "2019-03-15T00:00:00.000Z",
                  "start": "2019-03-01T00:00:00.000Z",
                },
                "transactions": Array [],
              }
            }
          >
            <div
              className="transaction-view-period col-sm"
            >
              <div
                className="transaction-view-date"
              >
                2019-03-01
              </div>
              <div
                className="transactions"
              />
              <div
                className="transactions-total"
              >
                0.00$
              </div>
            </div>
          </TransactionsPeriodView>
          <TransactionsPeriodView
            className="transaction-view-period col-sm"
            key="6"
            period={
              Period {
                "openingBalance": 0,
                "range": t {
                  "end": "2019-04-01T00:00:00.000Z",
                  "start": "2019-03-15T00:00:00.000Z",
                },
                "transactions": Array [],
              }
            }
          >
            <div
              className="transaction-view-period col-sm"
            >
              <div
                className="transaction-view-date"
              >
                2019-03-15
              </div>
              <div
                className="transactions"
              />
              <div
                className="transactions-total"
              >
                0.00$
              </div>
            </div>
          </TransactionsPeriodView>
          <TransactionsPeriodView
            className="transaction-view-period col-sm"
            key="7"
            period={
              Period {
                "openingBalance": 0,
                "range": t {
                  "end": "2019-04-15T00:00:00.000Z",
                  "start": "2019-04-01T00:00:00.000Z",
                },
                "transactions": Array [],
              }
            }
          >
            <div
              className="transaction-view-period col-sm"
            >
              <div
                className="transaction-view-date"
              >
                2019-04-01
              </div>
              <div
                className="transactions"
              />
              <div
                className="transactions-total"
              >
                0.00$
              </div>
            </div>
          </TransactionsPeriodView>
          <TransactionsPeriodView
            className="transaction-view-period col-sm"
            key="8"
            period={
              Period {
                "openingBalance": 0,
                "range": t {
                  "end": "2019-05-01T00:00:00.000Z",
                  "start": "2019-04-15T00:00:00.000Z",
                },
                "transactions": Array [],
              }
            }
          >
            <div
              className="transaction-view-period col-sm"
            >
              <div
                className="transaction-view-date"
              >
                2019-04-15
              </div>
              <div
                className="transactions"
              />
              <div
                className="transactions-total"
              >
                0.00$
              </div>
            </div>
          </TransactionsPeriodView>
        </div>
      </div>
    </TransactionsView>
  </div>
</App>
`;
